generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Cliente {
  cliente_id    Int           @id @default(autoincrement())
  nome          String        @db.VarChar(100)
  telefone      Int
  endereco      String?       @db.VarChar(100)
  pedidos       Pedido[]
  atendimentos  Atendimento[]  // Relação com Funcionário
}

model Produto {
  produto_id    Int              @id @default(autoincrement())
  nome          String           @db.VarChar(100)
  preco         Decimal          @db.Decimal(10,2)
  descricao     String           @db.VarChar(255)
  qtd_estoque   Int
  itens         Item_Pedido[]       // Relação com Pedido
  movimentos    MovimentoEstoque[]  // Movimento de estoque
  entregas      Entrega[]           // Relação com Fornecedor
}

model Pedido {
  pedido_id   Int           @id @default(autoincrement())
  cliente_id  Int
  data        DateTime      @default(now())
  sub_total   Decimal       @db.Decimal(10,2)
  cliente     Cliente       @relation(fields: [cliente_id], references: [cliente_id])
  itens       Item_Pedido[]
}

model Item_Pedido {
  item_id         Int        @id @default(autoincrement())
  pedido_id       Int
  produto_id      Int
  data_venda      DateTime   @default(now())
  quantidade      Int
  preco_unitario  Decimal    @db.Decimal(10,2) @default(0)
  forma_pagamento String     @db.VarChar(100)
  valor_total     Decimal    @db.Decimal(10,2) @default(0)
  pedido          Pedido     @relation(fields: [pedido_id], references: [pedido_id])
  produto         Produto    @relation(fields: [produto_id], references: [produto_id])
}

model Funcionario {
  funcionario_id Int           @id @default(autoincrement())
  nome           String        @db.VarChar(100)
  cargo          String        @db.VarChar(100)
  telefone       String        @db.VarChar(255)
  atendimentos   Atendimento[] // Relação com Cliente
}

model MovimentoEstoque {
  estoque_id      Int       @id @default(autoincrement())
  produto_id      Int
  tipo            String    @db.VarChar(20) // 'entrada' ou 'saida'
  quantidade      Int
  data_movimento  DateTime  @default(now())
  produto         Produto   @relation(fields: [produto_id], references: [produto_id])
}

model Fornecedor {
  fornecedor_id Int        @id @default(autoincrement())
  nome          String     @db.VarChar(100)
  telefone      String     @db.VarChar(20)
  entregas      Entrega[]
}

model Entrega {
  entrega_id     Int         @id @default(autoincrement())
  fornecedor_id  Int
  produto_id     Int
  data_entrega   DateTime    @default(now())
  quantidade     Int

  fornecedor     Fornecedor  @relation(fields: [fornecedor_id], references: [fornecedor_id])
  produto        Produto     @relation(fields: [produto_id], references: [produto_id])
}

model Atendimento {
  atendimento_id  Int          @id @default(autoincrement())
  cliente_id      Int
  funcionario_id  Int
  data            DateTime     @default(now())

  cliente         Cliente      @relation(fields: [cliente_id], references: [cliente_id])
  funcionario     Funcionario  @relation(fields: [funcionario_id], references: [funcionario_id])
}
